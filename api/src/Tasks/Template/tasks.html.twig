{% extends "base.html.twig" %}

{% block title %}Tasks{% endblock %}

{% block body %}

{% include '@roger/page-header.html.twig' with { 'title': 'Tasks', 'add_button': true, 'add_function': 'form()' } %}

{# <div class="row">
  <div class="col-md-12">
    <form id="instances-filters" class="dataTableFilters form-inline">
      <div class="form-group">
        <label class="form-label" for="filter-identifier">Identifier</label>
        <input class="form-control autocomplete" name="identifier" type="text" id="filter-identifier" placeholder="identifier" 
          autocomplete-source="/entity/instances" autocomplete-group="Instance:identifier" autocomplete-name="identifier" />

        {% include 'components/filter-kind.html.twig' %}
      </div>
    </form>
  </div>
</div> #}

<div class="row">
  <div class="col-md-12">
		<table class="table" id="tasks"></table>
  </div>
</div>

{% endblock %}

{% block js %}

<script>

$(document).ready(function () {
	var dataTableOpts = commonDataTableOpts();
	dataTableOpts.ajax.url = '/tasks';
	dataTableOpts.columns = [ 
		{ data: 'identifier', title: 'identifier', render: function(data, type, row, meta){ return '<a href="/ui/tasks/' + data + '">' + data + '</a>'} },
		{ data: 'title', title: 'Title', render: function(data, type, row, meta){ return '<a href="/ui/tasks/' + row.identifier + '">' + data + '</a>'} },
    { data: 'status', title: 'Status', render: function(data, type, row, meta){ return renderNullableString(data, '-'); } },
  ];

	rogerInit('tasks', dataTableOpts);

});


formFields = [
  { name: 'identifier', label: 'Identifier' },
  { name: 'title', label: 'Title' },
  { name: 'taskType', label: 'Type', type: 'select', draw: getTaskTypeList },
  { name: 'description', label: 'Description' },
];

function getTaskTypeList(e, form) {
  $.ajax({ ...commonAjaxOptions(), ...{
    url: '/task_types',
    success: function(data) {
      data['hydra:member'].forEach(o => {
        e.addOption({ label: o.identifier, value: o['@id'] });
      });
      if (typeof e.initValue === 'function') {
        e.initValue();
      }
    }
  }});
}

function form(id) {
  var method = 'POST';
  var action = '/tasks';
  var fields = formFields;

  RogerForm.initModal({ method: method, action: action, fields: fields });
}

function remove(id) {
  var method = 'DELETE';
  var action = `/tasks/${id}`;

  var fields = [
    { name: 'identifier', label: 'Identifier' }
  ];

  RogerForm.initModal({ method: method, action: action, fields: fields, populate: true });
}

function update(id) {
  var method = 'PUT';
  var action = `/tasks/${id}`;

  var fields = formFields;

  RogerForm.initModal({ method: method, action: action, fields: fields, populate: true });
}










</script>

{% endblock %}