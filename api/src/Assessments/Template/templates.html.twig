{% extends "base.html.twig" %}

{% block title %}Test templates{% endblock %}

{% block body %}

{% include '@roger/page-header.html.twig' with { 'title': 'Assessment Templates', 'add_button': true, 'add_function': 'addForm()' } %}

<div class="row">
	<div class="col-md-12">
		<table class="table" id="test-templates"></table>
	</div>
</div>

{% endblock %}

{% block js %}

<script>

function renderAssessmentTemplateActions(options) {
  let actions = '';
  if (options.assetsCount > 0) {
    actions += `<a role="button" onClick="generateAssessmentPlanForm('${options.identifier}');">${RogerUtils.iconShare({ title: 'Generate plan' })}</a>`;
  }

  return actions;
}

$(document).ready(function () {
	var dataTableOpts = commonDataTableOpts();
	dataTableOpts.ajax.url = '/assessments/templates';
	dataTableOpts.columns = [ 
		{ data: 'identifier', title: 'Identifier', render: function(data, type, row, meta){ return '<a href="/ui/assessments/templates/' + data + '">' + data + '</a>'} },
		{ data: 'title', title: 'Title' },
		{ data: 'assetsCount', title: 'Assets' },
		{ data: 'taskTemplatesCount', title: 'Task templates' },
		{ data: 'identifier', title: 'Actions', orderable: false, render: function(data, type, row, meta){ return renderAssessmentTemplateActions(row) + renderUD({ edit: { enabled: true, function: `update('${data}')`}, remove: { enabled: true, function: `remove('${data}')` }}); } }
	];

	rogerInit('test-templates', dataTableOpts);

});

function generateAssessmentPlanForm(templateIdentifier) {

	$.ajax({ ...commonAjaxOptions(), ...{
		url: '/assessments/templates/' + templateIdentifier, 
		success: function(data) {
			var method = 'POST';
			var action = '/assessments/templates/' + templateIdentifier + '/generate-plan';
			var fields = [
				{ name: 'identifier', label: 'Identifier' },
				{ name: 'assets', label: 'Assets', type: 'multiselect', options: data['assets'].map((str, index) => ({ value: str, label: str})) },
			];

			RogerForm.initModal({ method: method, action: action, fields: fields });
		}
	}});
}


formFields = [
	{ name: 'identifier', label: 'Identifier' },
	{ name: 'title', label: 'Title' },
	{ name: 'taskTemplates', label: 'Tasks templates', type: 'multiselect', draw: loadTaskTemplates },
	{ name: 'assets', label: 'Assets', type: 'multiselect', draw: loadAssets },
];

function loadTaskTemplates(e, form) {
	$.ajax({ ...commonAjaxOptions(), ...{
		url: '/task_templates', 
		success: function(data) {
			e.removeOptions();
			data['hydra:member'].forEach(o => {
				e.addOption({ label: o.identifier, value: o['identifier'] });
			});
			if (typeof e.initValue === 'function') {
				e.initValue();
			}
		}
	}});
}

function loadAssets(e, form) {
	$.ajax({ ...commonAjaxOptions(), ...{
		url: '/assets', 
		success: function(data) {
			e.removeOptions();
			data['hydra:member'].forEach(o => {
				e.addOption({ label: o.identifier, value: o['identifier'] });
			});
			if (typeof e.initValue === 'function') {
				e.initValue();
			}
		}
	}});
}

function addForm(id) {
	var method = 'POST';
	var action = '/assessments/templates';
	var fields = formFields;

	RogerForm.initModal({ method: method, action: action, fields: fields });
}

function remove(id) {
	var method = 'DELETE';
	var action = `/assessments/templates/${id}`;

	var fields = [
		{ name: 'identifier', label: 'Identifier' }
	];

	RogerForm.initModal({ method: method, action: action, fields: fields, populate: true });
}

function update(id) {
	var method = 'PUT';
	var action = `/assessments/templates/${id}`;

	var fields = formFields;

	RogerForm.initModal({ method: method, action: action, fields: fields, populate: true });
}


</script>

{% endblock %}