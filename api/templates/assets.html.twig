{% extends "base.html.twig" %}

{% block title %}Asset Manager{% endblock %}

{% block body %}

<div class="row">
  <div class="col-md-12">
    <form id="assets-filters" class="dataTableFilters form-inline">
      <div class="form-group">
        <label class="form-label" for="filter-identifier">Identifier</label>
        <input class="form-control autocomplete" name="identifier" type="text" id="filter-identifier" placeholder="identifier" 
          autocomplete-source="/assets" autocomplete-group="Asset:identifier" autocomplete-name="identifier" />

        <label class="form-label" for="filter-identifier-definition">Definition</label>
        <input class="form-control autocomplete" name="assetDefinition.identifier" type="text" id="filter-identifier-definition" placeholder="definition" 
          autocomplete-source="/asset_definitions" autocomplete-group="AssetDefinition:identifier" autocomplete-name="assetDefinition.identifier"
          autocomplete-response-field="identifier" />
      </div>
    </form>
  </div>
</div>

<div class="row">
  <div class="col-md-12">
    <table class="table" id="assets"></table>
  </div>
</div>

{% endblock %}

{% block js %}

<script>

$(document).ready(function () {
  var dataTableOpts = commonDataTableOpts();
  dataTableOpts.ajax.url = '/assets';
  dataTableOpts.columns = [ 
    { data: 'id', title: 'ID', render: function(data, type, row, meta){ return '<a href="/ui/assets/' + row.identifier + '">' + data + '</a>'} },
    { data: 'identifier', title: 'Identifier', render: function(data, type, row, meta){ return '<a href="/ui/assets/' + data + '">' + data + '</a>'} },
    { data: 'labels', title: 'Labels', 'orderable': false, render: function(data, type, row, meta){ return renderLabels(data); } },
    { data: 'version.name', title: 'Version', render: function(data, type, row, meta) { return renderWarningIfEmpty(data); } },
    { data: 'instances', title: 'Instances', 'orderable': false, render: function(data, type, row, meta){ return data.length } },
    { data: 'assetDefinition.identifier', title: 'Definition', defaultContent: '' },
    { data: 'owner.name', title: 'Owner', orderable: false, render: function(data, type, row, meta) { return renderWarningIfEmpty(data); } },
    { data: 'source.name', title: 'Source', orderable: false, defaultContent: '' },
  ];

  rogerInit('assets', dataTableOpts);
  
});

</script>

{% endblock %}