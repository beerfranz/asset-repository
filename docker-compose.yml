version: "3.4"

services:
  php: &php
    build:
      context: ./api
      target: app_php
    depends_on:
      - database
#    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
    command: [ "-d", "memory_limit=512M" ]
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-app}:${POSTGRES_PASSWORD:-!ChangeMe!}@database:5432/${POSTGRES_DB:-app}?serverVersion=${POSTGRES_VERSION:-14}
      TRUSTED_PROXIES: ${TRUSTED_PROXIES:-127.0.0.0/8,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16}
      TRUSTED_HOSTS: ^${SERVER_NAME:-example\.com|localhost}|caddy$$
      MERCURE_URL: ${CADDY_MERCURE_URL:-http://caddy/.well-known/mercure}
      MERCURE_PUBLIC_URL: https://${SERVER_NAME:-localhost}/.well-known/mercure
      MERCURE_JWT_SECRET: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      AUTH_HEADER_ROLES: x-token-user-roles
      AUTH_HEADER_EMAIL: x-token-user-email
      AUTH_HEADER_SUB: x-token-user-sub
      JWKS_URL: ${OAUTH_JWTS_URL}
      JWT_SKIP_VERIFY: "true"
      SYMFONY_PHPUNIT_REQUIRE: "nikic/php-parser:^4.13"  # fix test coverage

  php-worker:
    <<: *php
    build:
      context: ./api
      target: app_php_dev
    volumes:
      - ./api:/srv/app
      - ./api/docker/php/conf.d/app.dev.ini:/usr/local/etc/php/conf.d/app.dev.ini:ro
      - ./bundles:/srv/bundles
    command: [ "php", "bin/console", "messenger:consume", "async" ] # for production: add restart and "--limit=10", "--time-limit=60"

  # frankenphp:
  #   image: dunglas/frankenphp
  #   tty: true # for clean log in local
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./api:/app/public
  #     - ./bundles:/app/bundles
  #     - caddy_data:/data
  #     - ./docker/frankenphp/config:/config
  #   environment:
  #     DATABASE_URL: postgresql://${POSTGRES_USER:-app}:${POSTGRES_PASSWORD:-!ChangeMe!}@database:5432/${POSTGRES_DB:-app}?serverVersion=${POSTGRES_VERSION:-14}
  #     TRUSTED_PROXIES: ${TRUSTED_PROXIES:-127.0.0.0/8,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16}
  #     TRUSTED_HOSTS: ^${SERVER_NAME:-example\.com|localhost}|caddy$$
  #     MERCURE_URL: ${CADDY_MERCURE_URL:-http://caddy/.well-known/mercure}
  #     MERCURE_PUBLIC_URL: https://${SERVER_NAME:-localhost}/.well-known/mercure
  #     MERCURE_JWT_SECRET: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
  #     AUTH_HEADER_ROLES: x-token-user-roles
  #     AUTH_HEADER_EMAIL: x-token-user-email
  #     AUTH_HEADER_SUB: x-token-user-sub
  #     JWKS_URL: ${OAUTH_JWTS_URL}
  #     JWT_SKIP_VERIFY: "true"
  #     SYMFONY_PHPUNIT_REQUIRE: "nikic/php-parser:^4.13"  # fix test coverage
    
  # pwa:
  #   build:
  #     context: ./pwa
  #     target: prod
  #   environment:
  #     NEXT_PUBLIC_ENTRYPOINT: http://caddy

  caddy:
    build:
      context: api/
      target: app_caddy
    depends_on:
      - php
      # - pwa
    environment:
      PWA_UPSTREAM: pwa:3000
      SERVER_NAME: localhost:443, caddy:80, http://caddy:8080
      SERVER_NAME_SSO: localhost:8443
      SERVER_NAME_BASIC_AUTH: localhost:8888
      MERCURE_PUBLISHER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      MERCURE_SUBSCRIBER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      OAUTH_CLIENT_ID: ${OAUTH_CLIENT_ID}
      OAUTH_CLIENT_SECRET: ${OAUTH_CLIENT_SECRET}
      OAUTH_CLIENT_SCOPES: openid email profile offline_access
      OAUTH_METADATA_URL: ${OAUTH_METADATA_URL}
      JWT_SHARED_KEY: you-should-change-this-1
#    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
      - caddy_data:/data
      - ./api/docker/caddy:/etc/caddy
    ports:
      # HTTP
      - target: 80
        published: ${HTTP_PORT:-80}
        protocol: tcp
      # HTTPS
      - target: 443
        published: ${HTTPS_PORT:-443}
        protocol: tcp
      # HTTP/3
      - target: 443
        published: ${HTTP3_PORT:-443}
        protocol: udp
      # Caddy admin
      - target: 2019
        published: ${HTTP_PORT:-2019}
        protocol: tcp
      # HTTPS SSO
      - target: 8443
        published: ${HTTPS_PORT:-8443}
        protocol: tcp
      # HTTP/3 SSO
      - target: 8443
        published: ${HTTP3_PORT:-8443}
        protocol: udp
      # HTTP Basicauth
      - target: 8888
        published: ${HTTPS_PORT:-8888}
        protocol: tcp

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-14}-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-app}
      # You should definitely change the password in production
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-!ChangeMe!}
      - POSTGRES_USER=${POSTGRES_USER:-app}
    volumes:
      - db_data:/var/lib/postgresql/data
      # you may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./api/docker/db/data:/var/lib/postgresql/data
###< doctrine/doctrine-bundle ###

  adminer:
    image: adminer:4.8.1-standalone
    ports:
      - "8080:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=database

  test_data:
    image: ghcr.io/beerfranz/asset-repository-file-exporter:0.0.2
    environment:
      - ASSET_REPOSITORY_URL=http://caddy:8080
    volumes:
      - ./test_data/requests:/app/requests

  mailslurper:
    extends:
      file: docker-compose-cloud.yml
      service: mailslurper

  serverless:
    extends:
      file: docker-compose-cloud.yml
      service: serverless

  cognito:
    extends:
      file: docker-compose-cloud.yml
      service: cognito

  cognito-config:
    extends:
      file: docker-compose-cloud.yml
      service: cognito-config

  kms:
    extends:
      file: docker-compose-cloud.yml
      service: kms

# Mercure is installed as a Caddy module, prevent the Flex recipe from installing another service
###> symfony/mercure-bundle ###
###< symfony/mercure-bundle ###

volumes:
  php_socket:
  caddy_data:
  caddy_config:
###> doctrine/doctrine-bundle ###
  db_data:
###< doctrine/doctrine-bundle ###
###> symfony/mercure-bundle ###
###< symfony/mercure-bundle ###
